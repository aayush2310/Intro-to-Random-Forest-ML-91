import numpy as np
import pandas as pd
from sklearn.datasets import make_classification

x,y=make_classification(n_features=5,n_redundant=0,n_informative=5,n_clusters_per_class=1)

df=pd.DataFrame(x,columns=['col1','col2','col3','col4','col5'])
df['target']=y
print(df.shape)
df.head()


#Function for row sampling
def sample_rows(df,percent):
    return df.sample(int(percent*df.shape[0]),replace=True)
    
    
#Function for feature sampling
def sample_features(df,percent):
    cols=random.sample(df.columns.tolist()[:-1],int(percent*(df.shape[1]-1)))
    return df[cols]
    
    
#Function for combined sampling
def combined_sampling(df,row_percent,col_percent):
    new_df=sample_rows(df,row_percent)
    return sample_features(new_df,col_percent)
    
# ROW SAMPLING    
df1=sample_rows(df,0.1)

df2=sample_rows(df,0.1)

df3=sample_rows(df,0.1)

df1.shape
df2.shape
df3.shape

from sklearn.tree import DecisionTreeClassifier
clf1=DecisionTreeClassifier()
clf2=DecisionTreeClassifier()
clf3=DecisionTreeClassifier()


clf1.fit(df1.iloc[:,0:5],df1.iloc[:,-1])
clf2.fit(df2.iloc[:,0:5],df2.iloc[:,-1])
clf3.fit(df3.iloc[:,0:5],df3.iloc[:,-1])

from sklearn.tree import plot_tree

plot_tree(clf1)

plot_tree(clf2)

plot_tree(clf3)


clf1.predict(np.array([0.551380,-1.876815,-1.807618,-1.557932,-0.039809]).reshape(1,5))

clf2.predict(np.array([0.551380,-1.876815,-1.807618,-1.557932,-0.039809]).reshape(1,5))

clf3.predict(np.array([0.551380,-1.876815,-1.807618,-1.557932,-0.039809]).reshape(1,5))


#COLUMN SAMPLING

df4=sample_features(df,0.8)
df5=sample_features(df,0.8)
df6=sample_features(df,0.8)

from sklearn.tree import DecisionTreeClassifier
clf4=DecisionTreeClassifier()
clf5=DecisionTreeClassifier()
clf6=DecisionTreeClassifier()

clf4.fit(df1.iloc[:,0:4],df1.iloc[:,-1])
clf5.fit(df2.iloc[:,0:4],df2.iloc[:,-1])
clf6.fit(df3.iloc[:,0:4],df3.iloc[:,-1])

plot_tree(clf1)

plot_tree(clf2)

plot_tree(clf3)

clf4.predict(np.array([0.551380,-1.876815,-1.807618,-1.557932]).reshape(1,4))

clf5.predict(np.array([0.551380,-1.876815,-1.807618,-1.557932]).reshape(1,4))

clf6.predict(np.array([0.551380,-1.876815,-1.807618,-1.557932]).reshape(1,4))


#COMBINED SAMPLING

df7=combined_sampling(0.5,0.5)
df8=combined_sampling(0.5,0.5)
df9=combined_sampling(0.5,0.5)

from sklearn.tree import DecisionTreeClassifier
clf7=DecisionTreeClassifier()
clf8=DecisionTreeClassifier()
clf9=DecisionTreeClassifier()

clf7.fit(df7.iloc[:,0:2],df7.iloc[:,-1])
clf8.fit(df8.iloc[:,0:2],df8.iloc[:,-1])
clf9.fit(df9.iloc[:,0:2],df9.iloc[:,-1])

plot_tree(clf7)

plot_tree(clf8)

plot_tree(clf9)

clf7.predict(np.array([0.551380,-1.876815]).reshape(1,2))

clf8.predict(np.array([0.551380,-1.876815]).reshape(1,2))

clf9.predict(np.array([0.551380,-1.876815]).reshape(1,2))

